[{"C:\\Users\\Mesbaul\\Documents\\Mesbaul Alam\\Projects\\Project\\frontend\\src\\index.js":"1","C:\\Users\\Mesbaul\\Documents\\Mesbaul Alam\\Projects\\Project\\frontend\\src\\Pages\\QuestionDetail\\QuestionDetail.js":"2","C:\\Users\\Mesbaul\\Documents\\Mesbaul Alam\\Projects\\Project\\frontend\\src\\Pages\\AskQuestion\\AskQuestion.js":"3","C:\\Users\\Mesbaul\\Documents\\Mesbaul Alam\\Projects\\Project\\frontend\\src\\Containers\\NavBar\\NavBar.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":10449,"mtime":1607143898221,"results":"7","hashOfConfig":"6"},{"size":4011,"mtime":1607094464219,"results":"8","hashOfConfig":"6"},{"size":2564,"mtime":1616044013087,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uvte3u",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\Mesbaul\\Documents\\Mesbaul Alam\\Projects\\Project\\frontend\\src\\index.js",[],"C:\\Users\\Mesbaul\\Documents\\Mesbaul Alam\\Projects\\Project\\frontend\\src\\Pages\\QuestionDetail\\QuestionDetail.js",["19","20"],"C:\\Users\\Mesbaul\\Documents\\Mesbaul Alam\\Projects\\Project\\frontend\\src\\Pages\\AskQuestion\\AskQuestion.js",["21"],"C:\\Users\\Mesbaul\\Documents\\Mesbaul Alam\\Projects\\Project\\frontend\\src\\Containers\\NavBar\\NavBar.js",["22"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\n\r\nexport default function NavBar(props) {\r\n  const len = Object.keys(props.login).length;\r\n  const history = useHistory();\r\n\r\n  function hotQuestion() {\r\n    var questions = [...props.question].sort(function (a, b) {\r\n      return b.up.length - a.up.length;\r\n    });\r\n    props.hot === false && props.toggleHot(true);\r\n    props.setQuestion(questions);\r\n  }\r\n\r\n  function homeQuestion() {\r\n    var questions = [...props.question].sort(function (a, b) {\r\n      return Date.parse(b.time) - Date.parse(a.time);\r\n    });\r\n    props.hot === true && props.toggleHot(false);\r\n    props.setQuestion(questions);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"navFlex\">\r\n        <div\r\n          onClick={() => {\r\n            history.push(\"/\");\r\n            props.setTopic(\"\");\r\n            homeQuestion();\r\n          }}\r\n          className=\"header\"\r\n        >\r\n          Redev\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            history.push(\"/\");\r\n            props.setTopic(\"\");\r\n            homeQuestion();\r\n          }}\r\n          style={{ fontWeight: props.hot !== true ? \"bold\" : \"normal\" }}\r\n          className=\"headerItem\"\r\n        >\r\n          Home\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            hotQuestion();\r\n          }}\r\n          style={{ fontWeight: props.hot === true ? \"bold\" : \"normal\" }}\r\n          className=\"headerItem\"\r\n        >\r\n          Hot\r\n        </div>\r\n        <input\r\n          className=\"headerItem search\"\r\n          type=\"text\"\r\n          id=\"search\"\r\n          value={props.search}\r\n          onChange={(event) => props.searchBox(event.target.value)}\r\n        />\r\n        <div className=\"auth\">\r\n          {len === 0 ? (\r\n            <Link className=\"headerItem\" to=\"/login\">\r\n              <div>Login</div>\r\n            </Link>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {len === 0 ? (\r\n            <Link className=\"headerItem\" to=\"/register\">\r\n              <div>Register</div>\r\n            </Link>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {len !== 0 ? (\r\n            <div\r\n              onClick={() => {\r\n                localStorage.removeItem(\"user\");\r\n                props.authenticate({});\r\n              }}\r\n              className=\"headerItem\"\r\n            >\r\n              Logout\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"23","severity":1,"message":"24","line":32,"column":13,"nodeType":"25","endLine":45,"endColumn":4},{"ruleId":"23","severity":1,"message":"26","line":45,"column":6,"nodeType":"27","endLine":45,"endColumn":8,"suggestions":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"33","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":25},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'card._id'. Either include it or remove the dependency array.","ArrayExpression",["34"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",{"desc":"35","fix":"36"},"Update the dependencies array to be: [card._id]",{"range":"37","text":"38"},[1509,1511],"[card._id]"]